---
import { Image } from '@app/components';

// Utils
import { formatDecimalNumber, generatePlaceholder } from '@app/utils';

// Types
import { type IProduct } from '@app/interfaces';

type Props = Pick<IProduct, 'name' | 'amount' | 'currency'> & {
  imageURL: string;
  href: string;
};

const { imageURL, name, currency, amount, href } = Astro.props;
const hoverStyles: string[] = [
  '[&:hover>div>.caption]:text-white',
  '[&:hover>.pesudo]:bg-black',
  '[&:hover>.pesudo]:opacity-[0.7]',
];
const captionStyles: string[] = ['absolute', 'z-10', 'top-lg', 'left-lg'];
const transitionStyles: string[] = ['transition', 'duration-300'];
---

<figure class:list={['relative w-full h-full cursor-pointer', ...hoverStyles]}>
  <Image
    src={imageURL}
    placeholderSrc={generatePlaceholder(250, 250)}
    sizes={'(max-width: 360px) 240px, (max-width: 720px) 540px, (max-width: 1600px) 720px'}
    width={250}
    height={250}
    alt={`This is the image for ${name}`}
    className='w-full h-full object-contain'
    client:visible
  />
  <div
    class:list={[
      'pt-3 after:absolute after:top-0 after:block after:w-20 after:h-[3px] after:bg-sun',
      ...captionStyles,
    ]}
  >
    <figcaption
      class:list={['caption text-base text-sparingly', ...transitionStyles]}
    >
      From {currency}{formatDecimalNumber(amount)}
    </figcaption>

    <figcaption class:list={['caption text-2xl', ...transitionStyles]}>
      <span class=''> {name}</span>
    </figcaption>
  </div>
</figure>
